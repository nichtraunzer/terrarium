---
name: Release images manually
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Which tag to push (e.g. v1.2.3)"
        required: true
        default: "latest"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_BASE: ${{ github.repository }}

jobs:
  build:
    name: Build and release images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        image: ["terrarium"]
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/dump-context

      - name: Compute image tag
        id: compute-tag
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG=${{ github.event.release.tag_name }}
          else
            TAG=${{ github.event.inputs.tag }}
          fi
          echo "image_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v5

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and release Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.${{ matrix.image }}
          push: true
          target: test
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ steps.compute-tag.outputs.image_tag }}
