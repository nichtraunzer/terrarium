---
name: terrarium - tools for terraform development environment

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
  release:
    types:
      - released
env:
  # github.repository as <account>/<repo>
  IMAGE_BASE: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-images:
    name: Build images for platform ${{ matrix.platform }}
    timeout-minutes: 588
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        runner:
          - ubuntu-latest
          - buildjet-4vcpu-ubuntu-2204-arm
        exclude:
          - platform: linux/amd64
            runner: buildjet-4vcpu-ubuntu-2204-arm
          - platform: linux/arm64
            runner: ubuntu-latest
    steps:
      - name: Get lowercase GitHub username
        id: repository_owner
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository_owner }}
      - name: Set image
        id: image
        run: |
          echo 'image=ghcr.io/${{ steps.repository_owner.outputs.lowercase }}/terrarium' >> "${GITHUB_OUTPUT}"
      - name: Docker metadata
        id: docker_image_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/terrarium
          #  ${{ steps.image.outputs.image }}
          # Docker tags based on the following events/attributes
          flavor: |
            latest=false,suffix=-${{ matrix.platform }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr.io
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Buildx
        id: buildx_and_push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.terrarium
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.docker_image_metadata.outputs.labels }}
          tags: ${{ steps.docker_image_metadata.outputs.tags }}

  build-multi-architecture-manifest:
    needs:
      - build-images
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    permissions:
      contents: read
      packages: write
    timeout-minutes: 30
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
      - uses: int128/docker-manifest-create-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          suffixes: |
            -linux-amd64
            -linux-arm64
